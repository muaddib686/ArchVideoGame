//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity astrostraferECSGameConfigEntity { get { return GetGroup(GameMatcher.AstrostraferECSGameConfig).GetSingleEntity(); } }
    public Astrostrafer.ECS.GameConfigComponent astrostraferECSGameConfig { get { return astrostraferECSGameConfigEntity.astrostraferECSGameConfig; } }
    public bool hasAstrostraferECSGameConfig { get { return astrostraferECSGameConfigEntity != null; } }

    public GameEntity SetAstrostraferECSGameConfig(float newLeft, float newRight, float newTop, float newBottom, float newPlayerSpeed, float newPlayerRadius, float newAsteroidMinSpawnInterval, float newAsteroidMaxSpawnInterval, float newAsteroidMinSpeed, float newAsteroidMaxSpeed, float newAsteroidRadius, float newDespawnMargin) {
        if (hasAstrostraferECSGameConfig) {
            throw new Entitas.EntitasException("Could not set AstrostraferECSGameConfig!\n" + this + " already has an entity with Astrostrafer.ECS.GameConfigComponent!",
                "You should check if the context already has a astrostraferECSGameConfigEntity before setting it or use context.ReplaceAstrostraferECSGameConfig().");
        }
        var entity = CreateEntity();
        entity.AddAstrostraferECSGameConfig(newLeft, newRight, newTop, newBottom, newPlayerSpeed, newPlayerRadius, newAsteroidMinSpawnInterval, newAsteroidMaxSpawnInterval, newAsteroidMinSpeed, newAsteroidMaxSpeed, newAsteroidRadius, newDespawnMargin);
        return entity;
    }

    public void ReplaceAstrostraferECSGameConfig(float newLeft, float newRight, float newTop, float newBottom, float newPlayerSpeed, float newPlayerRadius, float newAsteroidMinSpawnInterval, float newAsteroidMaxSpawnInterval, float newAsteroidMinSpeed, float newAsteroidMaxSpeed, float newAsteroidRadius, float newDespawnMargin) {
        var entity = astrostraferECSGameConfigEntity;
        if (entity == null) {
            entity = SetAstrostraferECSGameConfig(newLeft, newRight, newTop, newBottom, newPlayerSpeed, newPlayerRadius, newAsteroidMinSpawnInterval, newAsteroidMaxSpawnInterval, newAsteroidMinSpeed, newAsteroidMaxSpeed, newAsteroidRadius, newDespawnMargin);
        } else {
            entity.ReplaceAstrostraferECSGameConfig(newLeft, newRight, newTop, newBottom, newPlayerSpeed, newPlayerRadius, newAsteroidMinSpawnInterval, newAsteroidMaxSpawnInterval, newAsteroidMinSpeed, newAsteroidMaxSpeed, newAsteroidRadius, newDespawnMargin);
        }
    }

    public void RemoveAstrostraferECSGameConfig() {
        astrostraferECSGameConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Astrostrafer.ECS.GameConfigComponent astrostraferECSGameConfig { get { return (Astrostrafer.ECS.GameConfigComponent)GetComponent(GameComponentsLookup.AstrostraferECSGameConfig); } }
    public bool hasAstrostraferECSGameConfig { get { return HasComponent(GameComponentsLookup.AstrostraferECSGameConfig); } }

    public void AddAstrostraferECSGameConfig(float newLeft, float newRight, float newTop, float newBottom, float newPlayerSpeed, float newPlayerRadius, float newAsteroidMinSpawnInterval, float newAsteroidMaxSpawnInterval, float newAsteroidMinSpeed, float newAsteroidMaxSpeed, float newAsteroidRadius, float newDespawnMargin) {
        var index = GameComponentsLookup.AstrostraferECSGameConfig;
        var component = (Astrostrafer.ECS.GameConfigComponent)CreateComponent(index, typeof(Astrostrafer.ECS.GameConfigComponent));
        component.left = newLeft;
        component.right = newRight;
        component.top = newTop;
        component.bottom = newBottom;
        component.playerSpeed = newPlayerSpeed;
        component.playerRadius = newPlayerRadius;
        component.asteroidMinSpawnInterval = newAsteroidMinSpawnInterval;
        component.asteroidMaxSpawnInterval = newAsteroidMaxSpawnInterval;
        component.asteroidMinSpeed = newAsteroidMinSpeed;
        component.asteroidMaxSpeed = newAsteroidMaxSpeed;
        component.asteroidRadius = newAsteroidRadius;
        component.despawnMargin = newDespawnMargin;
        AddComponent(index, component);
    }

    public void ReplaceAstrostraferECSGameConfig(float newLeft, float newRight, float newTop, float newBottom, float newPlayerSpeed, float newPlayerRadius, float newAsteroidMinSpawnInterval, float newAsteroidMaxSpawnInterval, float newAsteroidMinSpeed, float newAsteroidMaxSpeed, float newAsteroidRadius, float newDespawnMargin) {
        var index = GameComponentsLookup.AstrostraferECSGameConfig;
        var component = (Astrostrafer.ECS.GameConfigComponent)CreateComponent(index, typeof(Astrostrafer.ECS.GameConfigComponent));
        component.left = newLeft;
        component.right = newRight;
        component.top = newTop;
        component.bottom = newBottom;
        component.playerSpeed = newPlayerSpeed;
        component.playerRadius = newPlayerRadius;
        component.asteroidMinSpawnInterval = newAsteroidMinSpawnInterval;
        component.asteroidMaxSpawnInterval = newAsteroidMaxSpawnInterval;
        component.asteroidMinSpeed = newAsteroidMinSpeed;
        component.asteroidMaxSpeed = newAsteroidMaxSpeed;
        component.asteroidRadius = newAsteroidRadius;
        component.despawnMargin = newDespawnMargin;
        ReplaceComponent(index, component);
    }

    public void RemoveAstrostraferECSGameConfig() {
        RemoveComponent(GameComponentsLookup.AstrostraferECSGameConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAstrostraferECSGameConfig;

    public static Entitas.IMatcher<GameEntity> AstrostraferECSGameConfig {
        get {
            if (_matcherAstrostraferECSGameConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AstrostraferECSGameConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAstrostraferECSGameConfig = matcher;
            }

            return _matcherAstrostraferECSGameConfig;
        }
    }
}
